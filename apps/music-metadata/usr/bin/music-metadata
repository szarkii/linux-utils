#!/bin/bash

source /usr/lib/linux-utils-lib.sh

HELP="Sets metadata for music files. Downloads the file if input is URL.
$(basename $0) [-s | --show] [-o output] [-t track] [-n name] [-a artist] [-l album] [-y year] [-g genre] input [input2, ...]
input  file or URL
-n  will be also the name of file if input is URL (if empty the title will be used)
-o  output directory (if downloading file)
-s  only show metadata
"

lib_printHelpOrVersionIfRequested "$@"

[ "$#" -lt 1 ] && lib_printHelpAndExit "You have to provide at least input."

function downloadFile() {
    name="$1"
    output="$2"
    url="$3"
    tmpDir="/tmp/music-metadata-${RANDOM}"
    tmpPath="$tmpDir/file"

    youtube-dl -f "bestaudio/best" -ciw -o "${tmpPath}.%(ext)s" --extract-audio --audio-quality 0 "$url"

    if [ $? != 0 ]; then
        lib_logError "Cannot download the file."
        exit
    fi

    downloadedFileName=$(ls $tmpDir | head -n1)
    outputPath="${output}/${name}.${downloadedFileName#*.}"
    mv "$tmpDir/$downloadedFileName" "$outputPath"

    rm -r "$tmpDir"
    echo "$outputPath"
}

function getFileName {
    youtube-dl -o "%(title)s" --get-filename "$1"
}

function setMetadata() {
    track="$1"
    name="$2"
    artist="$3"
    album="$4"
    year="$5"
    genre="$6"
    filePath="$7"

    setMetadataIfNeeded "track" "$track" "$filePath"
    setMetadataIfNeeded "title" "$name" "$filePath"
    setMetadataIfNeeded "artist" "$artist" "$filePath"
    setMetadataIfNeeded "album" "$album" "$filePath"
    setMetadataIfNeeded "date" "$year" "$filePath"
    setMetadataIfNeeded "genre" "$genre" "$filePath"

    kid3-cli -c "get" "$filePath"
    echo
}

function setMetadataIfNeeded() {
    metadataName="$1"
    metadataValue="$2"
    filePath="$3"
    fileName="$(basename "$filePath")"

    if [[ ! -z "$metadataValue" ]]; then
        echo "Setting $metadataValue $metadataName in $fileName"
        kid3-cli -c "set $metadataName '${metadataValue/\'/\\\'}'" "$filePath"
    fi
}

# Only show metadata
if [[ "$@" = *"-s"* || "$@" = *"--show"* ]]; then
    for arg in "$@"; do
        if [[ "$arg" != *"-s"* && "$arg" != *"--show"* ]]; then
            lib_logInfo "$arg"
            lib_logSeparator
            kid3-cli -c "get" "$arg"
            lib_logSeparator
        fi
    done

    exit
fi

options=()

while getopts o:t:n:a:l:y:g:d: option; do
    options+=("-$option" "$OPTARG")
    case "${option}" in
        o) output=${OPTARG} ;;
        t) track=${OPTARG} ;;
        n) name=${OPTARG} ;;
        a) artist=${OPTARG} ;;
        l) album=${OPTARG} ;;
        y) year=${OPTARG} ;;
        g) genre=${OPTARG} ;;
    esac
done

inputs=()

for arg in "$@"; do
    isOption='false'

    for option in "${options[@]}"; do
        if [ "$arg" = "$option" ]; then
            isOption='true'
            break
        fi
    done

    if [ $isOption = 'false' ]; then
        inputs+=("$arg")
    fi
done

files=()

for input in "${inputs[@]}"; do
    if [[ "$input" = "http"* ]]; then
        if [[ -z "$name" ]]; then
            name=$(getFileName "$input")
        fi

        if [[ -z "$output" ]]; then
            output="."
        fi

        downloadFile "$name" "$output" "$input"

        files+=("$(ls "$output/$name"* | head -n1)")
    else
        files+=("$input")
    fi
done

for file in "${files[@]}"; do
    filePath=$(realpath "$file")
    setMetadata "$track" "$name" "$artist" "$album" "$year" "$genre" "$filePath"
done
